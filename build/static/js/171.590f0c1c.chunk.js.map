{"version":3,"file":"static/js/171.590f0c1c.chunk.js","mappings":"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","sources":["../node_modules/proxy-compare/src/index.ts","../node_modules/valtio/esm/vanilla.mjs","../node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts","../node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst TARGET_CACHE_PROPERTY = 't';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [TARGET_CACHE_PROPERTY]?: TargetCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n        state[TARGET_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  handlerAndState[1][TARGET_CACHE_PROPERTY] = targetCache as TargetCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(snap, key)) {\n      return;\n    }\n    const value = Reflect.get(target, key);\n    const desc = {\n      value,\n      enumerable: true,\n      // This is intentional to avoid copying with proxy-compare.\n      // It's still non-writable, so it avoids assigning a value.\n      configurable: true\n    };\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n    } else if (value instanceof Promise) {\n      delete desc.value;\n      desc.get = () => handlePromise(value);\n    } else if (proxyStateMap.has(value)) {\n      const [target2, ensureVersion] = proxyStateMap.get(\n        value\n      );\n      desc.value = createSnapshot(\n        target2,\n        ensureVersion(),\n        handlePromise\n      );\n    }\n    Object.defineProperty(snap, key, desc);\n  });\n  return Object.preventExtensions(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxyFunction(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (\"value\" in desc) {\n      proxyObject[key] = initialObject[key];\n      delete desc.value;\n      delete desc.writable;\n    }\n    Object.defineProperty(baseObject, key, desc);\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  isTelegram() {\n    return (\n      typeof window !== 'undefined' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (Boolean((window as any).TelegramWebviewProxy) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).Telegram) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).TelegramWebviewProxyProto))\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    //  Universal link required in telegram context\n    if (safeAppUrl.startsWith('https://t.me')) {\n      // eslint-disable-next-line require-unicode-regexp\n      const formattedUri = Buffer.from(wcUri).toString('base64').replace(/[=]/g, '')\n      if (safeAppUrl.endsWith('/')) {\n        safeAppUrl = safeAppUrl.slice(0, -1)\n      }\n\n      this.setWalletConnectDeepLink(safeAppUrl, name)\n\n      const url = new URL(safeAppUrl)\n      url.searchParams.set('startapp', formattedUri)\n      const link = url.toString()\n\n      return link\n    }\n\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    const adjustedTarget = this.isTelegram() ? '_blank' : target\n    window.open(href, adjustedTarget, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["Symbol","t","s","Object","getPrototypeOf","c","WeakMap","l","e","has","get","prototype","Array","h","arguments","length","undefined","set","isObject","x","proxyStateMap","refSet","WeakSet","buildProxyFunction","objectIs","is","newProxy","target","handler","Proxy","canProxy","isArray","iterator","Error","Number","Date","String","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","value","reason","snapCache","createSnapshot","version","handlePromise","cache","snap","create","markToTrack","Reflect","ownKeys","forEach","key","getOwnPropertyDescriptor","desc","enumerable","configurable","Promise","target2","ensureVersion","defineProperty","preventExtensions","proxyCache","versionHolder","proxyFunction","initialObject","found","listeners","Set","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","propProxyStates","Map","removePropListener","_a","entry","delete","call","baseObject","deleteProperty","prevValue","deleted","receiver","hasPrevValue","getUntracked","nextValue","then","v","catch","childProxyState","addPropListener","propProxyState","size","remove","proxyObject","proxyState","nextCheckVersion","_ref","propVersion","add","_ref2","prevRemove","removeListener","_ref3","writable","defaultProxyFunction","proxy","subscribe","callback","notifyInSync","console","warn","ops","addListener","isListenerActive","push","splice","resolve","state$7","history","view","data","RouterCtrl","state","reset","replace","goBack","pop","last","slice","setData","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","ua","isHttpUrl","url","startsWith","isTelegram","TelegramWebviewProxy","Telegram","TelegramWebviewProxyProto","formatNativeUrl","appUrl","wcUri","name","this","formatUniversalUrl","safeAppUrl","replaceAll","endsWith","setWalletConnectDeepLink","encodeURIComponent","formattedUri","Buffer","from","toString","URL","searchParams","async","miliseconds","setTimeout","openHref","href","adjustedTarget","open","localStorage","setItem","JSON","stringify","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","routerData","Wallet","state$6","enabled","location","hostname","protocol","userSessionId","events","connectedWalletId","EventsCtrl","snapshot","initialize","crypto","randomUUID","setConnectedWalletId","click","event","type","timestamp","now","track","state$5","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","OptionsCtrl","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","state$4","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_b","assign","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","endpoint","params","allParams","__spreadValues$2","sdkType","sdkVersion","append","entries","fetch","json","ExplorerUtil","getWalletImageUrl","imageId","getAssetImageUrl","state$3","wallets","listings","total","page","search","recomendedWallets","ExplorerCtrl","getRecomendedWallets","recommendedIds","join","getAllListings","listingsArr","values","sort","a","b","indexOf","id","chainsFilter","isExcluded","sdks","excludedIds","getMobileListings","getDesktopListings","getWallets","extendedParams","__spreadValues$1","map","wallet","filter","listingsObj","resetSearch","state$2","ModalCtrl","options","uri","interval","setInterval","opts","clearInterval","close","state$1","themeMode","ThemeCtrl","setThemeConfig","theme","themeVariables","__spreadValues","message","variant","ToastCtrl","openToast","closeToast","WalletConnectModal","constructor","openModal","closeModal","subscribeModal","setTheme","initUi","modal","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}